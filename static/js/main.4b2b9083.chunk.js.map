{"version":3,"sources":["Speech.js","landing.js","contact.js","Submit.js","App.js","reportWebVitals.js","index.js"],"names":["Dictaphone","useSpeechRecognition","finalTranscript","resetTranscript","useEffect","SpeechRecognition","startListening","browserSupportsSpeechRecognition","console","log","Container","fluid","to","className","Jumbotron","Landing","useRouteMatch","path","url","Form","Group","controlId","Label","Control","type","placeholder","Check","label","Button","variant","id","Contact","Submit","setTimeout","window","location","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2b9083.chunk.js","sourcesContent":["import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport React, { useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {IoIosArrowRoundBack} from 'react-icons/io';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Dictaphone ()  {\r\n\r\n    const { finalTranscript, resetTranscript } = useSpeechRecognition()\r\n\r\n    // Update the document title using the browser API\r\n    useEffect(()=>{\r\n\r\n      let startRecording = () => {\r\n        let speech = SpeechRecognition.startListening();\r\n      }\r\n        startRecording()\r\n    })\r\n\r\n    // console.log(finalTranscript)\r\n\r\n    let stopTranscript = () => {\r\n      SpeechRecognition.stopListening()\r\n      console.log (\"stop \")\r\n    }\r\n\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n      return null\r\n    }\r\n\r\n    if (finalTranscript === \"OK Google test\") {\r\n\r\n        let activate = () => {\r\n          console.log (finalTranscript[1])\r\n        }\r\n        activate();\r\n    }\r\n    \r\n    return (\r\n     \r\n        <Container fluid>\r\n\r\n            {/* back arrow icon  */}\r\n            <Link to=\"/contact\">\r\n            <li><IoIosArrowRoundBack className=\"back\"/></li>\r\n            </Link>\r\n\r\n          <Jumbotron>\r\n            <h1>Voice Activated Family Notification</h1>\r\n            {finalTranscript}\r\n          </Jumbotron>\r\n\r\n          {/* <div className=\"transcript-cont\">{transcript}</div> */}\r\n        </Container>\r\n  \r\n    )\r\n  }\r\n\r\n  export default Dictaphone","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './styles/landing.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\"\r\n\r\nfunction Landing () {\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    return (\r\n\r\n    <Container fluid>\r\n    <Jumbotron>\r\n        <h1>Voice Activated Family Notification</h1>\r\n    </Jumbotron>\r\n    <Container>    \r\n    <Form> \r\n    {/* form heading  */}\r\n   <ul><li><h2>Log in</h2></li><li>or sign up</li></ul>\r\n\r\n   \r\n    <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\"/>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\"/>\r\n    </Form.Group>\r\n\r\n    {/* check boxes  */}\r\n    <Form.Group controlId=\"formBasicCheckbox\">\r\n        <Form.Check type=\"checkbox\" label=\"Show password\" />\r\n        <Form.Check type=\"checkbox\" label=\"Keep me logged in\" />\r\n    </Form.Group>\r\n\r\n{/* \r\n    add function to pass value to local storage....this will be used as token\r\n    for prototype to keep user logged in.....(add logout button on other pages)\r\n    that wil reset the local storage value to 0 (which will take back to landing page) */}\r\n\r\n \r\n    <Link to=\"/contact\"><Button variant=\"primary\" type=\"submit\" id = \"login\">\r\n        Log in\r\n    </Button>\r\n    </Link>\r\n\r\n  </Form>\r\n  </Container>\r\n  </Container>\r\n )\r\n}\r\n\r\n\r\nexport default Landing","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport {IoIosArrowRoundBack} from 'react-icons/io'\r\n\r\n// mostly just a different margin on container\r\nimport './styles/contactForm.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Contact () {\r\n\r\n\r\n    return (\r\n\r\n        // form heading \r\n        <Container id = \"contactForm\">\r\n            <Link to=\"/\">\r\n            <li><IoIosArrowRoundBack className=\"back\"/></li>\r\n            </Link>\r\n\r\n            <Form> \r\n                <Form.Group controlId=\"formContactPerson\">\r\n                    <strong><Form.Label>Contact Person</Form.Label></strong>\r\n                    <Form.Control type=\"text\" placeholder=\"Please enter name of contact person\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactDetails\">\r\n                    <strong><Form.Label>Contact Details</Form.Label></strong>\r\n                    <Form.Control type=\"telephone\" placeholder=\"enter details of your nominated contact\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formMedicalConditions\">\r\n                    <strong><Form.Label>Your Medical Conditions</Form.Label></strong>\r\n                    <Form.Control type=\"text\" placeholder=\"enter details of any medical conditions\"/>\r\n                </Form.Group>\r\n\r\n                <Link to=\"/submit\"><Button variant=\"primary\" type=\"submit\" id = \"login\">\r\n                    Submit\r\n                </Button>\r\n                </Link>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport Dictaphone from './Speech.js';\r\nimport Landing from './landing';\r\nimport Contact from './contact';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './styles/submit.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n  } from \"react-router-dom\"\r\n\r\n\r\nfunction Submit() {\r\n\r\n    // timer function to return to landing screen\r\n    setTimeout(backHome,6000)\r\n    function backHome () {\r\n        window.location = \"/speech\"\r\n    }\r\n\r\n  return (\r\n\r\n        <div className = \"updated\">\r\n            <div id=\"submit\"><h1>Contact Details Updated</h1>\r\n            <br></br>\r\n            <p>Your nominated contacts as well as your medical details have been updated. You don't need to do anything else. The phone will send the information when you use the activation phrase.</p>\r\n            \r\n            </div>\r\n        </div>\r\n  )\r\n}   \r\n \r\nexport default Submit;","import React from 'react';\r\nimport Dictaphone from './Speech.js';\r\nimport Submit from './Submit';\r\nimport Landing from './landing';\r\nimport Contact from './contact';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n \r\nfunction App() {\r\n  \r\n  return (\r\n\r\n    <div className=\"component\">\r\n        <Router>\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n            <Landing />\r\n            </Route>\r\n            <Route path=\"/contact\" component = {Contact}>\r\n            </Route>\r\n\r\n            <Route path=\"/submit\" component = {Submit}>\r\n            </Route>\r\n\r\n            <Route path=\"/speech\" component = {Dictaphone}>\r\n            </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceworker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// serviceWorker.register();"],"sourceRoot":""}